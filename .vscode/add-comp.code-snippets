{
	// Place your ad-admin-web 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"新建/编辑页面组件": {
		"scope": "vue",
		"prefix": "add-comp",
		"body": [
			"<template>"
			"\t<div class='app-container'>"

			"\t\t<el-form ref='postFormRef' :model='postForm' :rules='postFormRules' label-width='120px' label-suffix='：'>"

			"\t\t\t<el-card>"
			"\t\t\t\t<div slot='header'>基本信息</div>"

			"\t\t\t\t<el-form-item label='名称' prop='name'>"
			"\t\t\t\t\t<el-input v-model='postForm.name' placeholder='请输入名称' class='w500' clearable />"
			"\t\t\t\t</el-form-item>\n"

			"\t\t\t\t<el-form-item>"
			"\t\t\t\t\t<el-button :loading='loading' type='primary' @click='handleSumbit'>提 交</el-button>"
			"\t\t\t\t\t<el-button @click='handleCancel'>取 消</el-button>"
			"\t\t\t\t</el-form-item>"

			"\t\t\t</el-card>\n"

			"\t\t</el-form>"

			"\t</div>"
			"</template>\n"

			"<script>"
			"const _cloneDeep = require('lodash/cloneDeep')"
			"import { isEmpty } from '@/utils'"

			"const defaultPostForm = {"
			"\tname: ''"
			"}\n"

			"export default {"
			"\tname: '${1:defaultVal}',"
			"\tprops: {"
			"\t\tisEdit: {"
			"\t\t\ttype: Boolean,"
			"\t\t\tdefault: false"
			"\t\t}"
			"\t},"

			"\tdata() {"
			"\t\treturn {"
			"\t\t\tpostForm: _cloneDeep(defaultPostForm),"
			"\t\t\tpostFormRules: {"
			"\t\t\t\tname: [{ required: true, message: '请输入名称', trigger: 'blur' }]"
			"\t\t\t},"
			"\t\t\tloading: false"
			"\t\t}"
			"\t},"

			"\tcreated() {"
			"\t\tif (this.isEdit) {"
			"\t\t\tconst id = this.\\$route.query.id"
			"\t\t\tthis.postForm.id = id"
			"\t\t}"
			"\t\tPromise.all(["
			"\t\t\t// 请求一些options选项"
			"\t\t]).finally(() => {"
			"\t\t\tif (this.isEdit) {"
			"\t\t\t\tthis.getDetail(this.postForm.id).then(() => {"
			"\t\t\t\t\t// 请求详情后请求子类options选项"
			"\t\t\t\t})"
			"\t\t\t}"
			"\t\t})"
			"\t},"

			"\tmethods: {"
			"\t\tgetDetail(id) {"
			"\t\t\treturn new Promise((resolve, reject) => {"
			"\t\t\t\tgetDetail(id)"
			"\t\t\t\t\t.then(res => {"
			"\t\t\t\t\t\tthis.postForm = _cloneDeep(Object.assign(this.postForm, res.data))"
			"\t\t\t\t\t\tresolve(res.data)"
			"\t\t\t\t\t})"
			"\t\t\t\t\t.catch(err => {"
			"\t\t\t\t\t\tconsole.log(err)"
			"\t\t\t\t\t\treject(err)"
			"\t\t\t\t\t})"
			"\t\t\t})"
			"\t\t},"

			"\t\thandleCancel() {"
			"\t\t\tthis.\\$router.back()"
			"\t\t},"

			"\t\thandleSumbit() {"
			"\t\t\tthis.\\$refs.postFormRef.validate()"
			"\t\t\t\t.then(() => {"
			"\t\t\t\t\t// 全部验证通过"
			"\t\t\t\t\tconst postFormCopy = _cloneDeep(this.postForm)"
			"\t\t\t\t\tconst requestApi = this.isEdit ? updateApi : createApi"
			"\t\t\t\t\t// 获取当前表单类型的提交函数，并提交"
			"\t\t\t\t\tthis.showLoading()"
			"\t\t\t\t\trequestApi(postFormCopy)"
			"\t\t\t\t\t\t.then(res => {"
			"\t\t\t\t\t\t\tthis.\\$message.success(`\\${this.isEdit ? '编辑成功' : '新增成功'}`)"
			"\t\t\t\t\t\t\tthis.\\$router.push({ name: 'list', params: { flush: true }})"
			"\t\t\t\t\t\t})"
			"\t\t\t\t\t\t.finally(() => {"
			"\t\t\t\t\t\t\tthis.hideLoading()"
			"\t\t\t\t\t\t})"
			"\t\t\t\t})"
			"\t\t\t\t.catch(err => {"
			"\t\t\t\t\tconsole.log(err)"
			"\t\t\t\t\treturn"
			"\t\t\t\t})"

			"\t\t}"
			"\t}"
			"}"

			"</script>"

			"<style lang='scss' scoped>"
      "@import '~@/styles/width.scss';"
			"</style>"
			""
		],
		"description": "新建/编辑页面组件"
	}
}
